[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llm-tree-classifier"
version = "0.1.0"
description = "A library for classifying text using decision trees with LLM-based decisions"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "llama-cpp-python>=0.2.0",
    "pyyaml>=6.0.1",
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/llm-tree-classifier"
Repository = "https://github.com/yourusername/llm-tree-classifier.git"

[tool.ruff]
# Enable all rules by default
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "PL",  # pylint
    "RUF", # Ruff-specific rules
]
ignore = []

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black
line-length = 88

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Target Python 3.12 for development tools
target-version = "py312"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["llm_tree_classifier"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # No assert statements in tests

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=llm_tree_classifier --cov-report=term-missing" 